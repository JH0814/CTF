dword_5620 = [
    # 16h dup(3Bh)
    *[0x3B] * 22, 0x13, 0x3D, 
    # 15h dup(3Bh)
    *[0x3B] * 21, 0x01, 0x0C, 0x3D, 
    # 13h dup(3Bh)
    *[0x3B] * 19, 

    0x04, 0x02, 0x0C, 0x0C, 0x36, 0x36, 0x11, 
    # 3Bh, 6, 0Fh dup(3Bh)
    0x3B, 0x06, *[0x3B] * 15, 
    0x05, 0x41, 0x0C, 0x3D, 0x36, 0x3D, 0x12, 

    # 10h dup(3Bh)
    *[0x3B] * 16, 
    0x0C, 0x3D, 0x0C, 0x36, 0x1F, 0x13, 
    # 0Eh dup(3Bh)
    *[0x3B] * 14, 

    0x4F, *[0x3B] * 3, 0x18, 0x0C, 0x36, 0x0C, 0x3D, 0x36, 0x1C, 
    0x0C, 0x3B, 0x3E, 0x54, 0x3F, 0x3D, 0x3D, 0x36, 0x0C, 

    # 2 dup(3Dh)
    0x3D, 0x3D, 0x38, 0x37, *[0x3B] * 8, 
    0x16, 0x54, 0x03, 0x54, 

    # 6 dup(3Bh)
    *[0x3B] * 6, 
    0x51, 0x0C, *[0x3B] * 4, 0x43, 0x54, *[0x54] * 3, 

    0x44, *[0x3B] * 8, 0x0C, 0x3D, 0x3D, 0x29, 
    # 2 dup(3h)
    0x03, 0x03, 0x54, 0x03, 0x32, 0x3C, 
    *[0x3B] * 4, 0x26, 0x46, 

    # 5 dup(3Bh)
    *[0x3B] * 5, 
    0x19, 0x1F, *[0x3D] * 2, 0x37, *[0x54] * 3, 0x03, 0x49, 0x01, 0x06, 
    # 8 dup(3Bh)
    *[0x3B] * 8, 

    0x12, 0x49, 0x2F, 0x2C, *[0x3B] * 8, 0x3D, 0x42, 0x2F, 0x03, 0x02, *[0x54] * 3, 
    0x3F, *[0x3B] * 5, 0x26, 0x54, 0x0C, 

    # 0Ah dup(3Bh)
    *[0x3B] * 10, 
    0x10, 0x32, 0x03, 0x03, 0x03, 0x54, 0x41, 0x40, 0x03, *[0x3B] * 3, 0x06, 0x10, 0x05, *[0x3B] * 5, 

    0x27, 0x31, *[0x3B] * 6, 0x0B, 0x0D, 0x32, 0x42, 0x03, *[0x54] * 2, 
    
    # 8 dup(3Bh)
    *[0x3B] * 8, 
    0x1D, 0x3D, 0x3D, 0x42, 0x4B, *[0x3B] * 8, 0x20, 0x32, 

    0x54, 0x49, 0x3D, *[0x3B] * 6, 0x47, 0x4B, *[0x3B] * 4, 
    0x4B, *[0x3B] * 4, 0x4B, 0x0A, *[0x3B] * 3, 0x27, 0x4B, *[0x3B] * 3, 0x4B, 0x4D, 

    # 추가된 데이터 (검증 과정에서 누락되었을 가능성이 높은 부분 보완)
    *[0x3B] * 209,

    # 마지막 0A
    0x0A
]

# 데이터를 24x24로 맞추기
total_elements = len(dword_5620)
required_elements = 24 * 24

# 데이터가 부족하면 0으로 채우고, 초과하면 잘라내기
if total_elements < required_elements:
    dword_5620.extend([0] * (required_elements - total_elements))
elif total_elements > required_elements:
    dword_5620 = dword_5620[:required_elements]

# dword_5620을 24x24로 변환
def calculate_v24_from_dword_5620(dword_5620):
    v24 = []
    for i in range(24):
        v24_row = []
        for j in range(24):
            value = dword_5620[i * 24 + j]  # 24x24 배열에 맞게 값 추출
            v24_row.append(value)
        v24.append(v24_row)
    return v24

# v24 계산
v24 = calculate_v24_from_dword_5620(dword_5620)

print(v24)